- title 'Trashed Messages'

.text
  %h3= "Trashed Messages : #{smart_objects_objects_displayed_range(@messages)} of #{smart_objects_count(@messages)}"
  
  .actions_right= link_to('Go to Inbox', admin_messages_path)
  
  %table
    - 5.times do
      %col{ :class => "even" }
    %tr
      %th.icon_centered= link_to image_tag("/images/admin/unread_label_icon.png", :alt => "Unread?"), trashes_admin_messages_path(sort_parameters('read'))
      %th.icon_centered= link_to image_tag("/images/admin/replied_label_icon.png", :alt => "Replied?"), trashes_admin_messages_path(sort_parameters('replied'))
      %th= link_to "From", trashes_admin_messages_path(sort_parameters('sender_name'))
      %th= link_to "Date Received", trashes_admin_messages_path(sort_parameters('created_at'))
      %th
      
    - @messages.each do |message|
      %tr[message]{ :class => cycle("", "alt") }
        %td.icon_centered
          %input{ :type => "hidden", :value => admin_message_path(message) }
          - if message.unread?
            = image_tag("/images/admin/unread_icon.png", :alt => "Unread")
        %td.icon_centered
          - if message.replied?
            = image_tag("/images/admin/replied_icon.png", :alt => "Replied")
        %td.from
          %h4= message_sender_name_with_email_and_mailto(message)
          %p.excerpt= truncate message.content, :length => 160
        -#%td= link_to(words_count(message.content), admin_message_path(message))
        %td.datetime
          %span.date= sexy_date(message.created_at)
          %span.time= sexy_time(message.created_at)
        %td
          = button_to("untrash", untrash_admin_message_path(message), :method => :put, :id => "untrash_message_#{message.id}", :class => "button delete")
  
  - unless params.key? :all
    .right_links= link_to "View all", trashes_admin_messages_path(:all => true)
    = will_paginate(@messages)
  - else
    .right_links= link_to "View with paginate", trashes_admin_messages_path